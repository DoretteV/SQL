-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Products Menu"
(
    product_id bigserial,
    product_name character varying(50),
    product_price numeric (5,2),
    PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    user_id bigserial,
    name character varying(50),
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public."Cart"
(
    product_id integer,
    qty integer,
    PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public."OrderHeader"
(
    order_id integer,
    user_id integer,
    order_date timestamp without time zone,
    PRIMARY KEY (order_id),
    CONSTRAINT unique_order_id UNIQUE (order_id)
);


CREATE TABLE IF NOT EXISTS public."OrderDetails"
(
    orderheader integer,
    product_id integer,
    qty integer
);

ALTER TABLE IF EXISTS public."Cart"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products Menu" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OrderHeader"
    ADD FOREIGN KEY (user_id)
    REFERENCES public."Users" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."OrderDetails"
    ADD FOREIGN KEY (orderheader)
    REFERENCES public."OrderHeader" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public."OrderDetails"
    ADD FOREIGN KEY (product_id)
    REFERENCES public."Products Menu" (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

-- Add unique constraint to OrderDetails table for order_id
ALTER TABLE public."OrderDetails"
DROP CONSTRAINT unique_orderheader;


--Inserting products into Products Menu
INSERT INTO public."Products Menu" (product_id, product_name, product_price)
VALUES	(1, 'Coke', 12),
		(2, 'Chocolate', 10),
		(3, 'Chips', 7);

SELECT * FROM public."Products Menu"

--Inserting users
INSERT INTO public."Users" (user_id, name)
VALUES	(21, 'Arnold'),
		(25, 'Sheryl');

SELECT * FROM public."Users"

--Adding a coke to the Cart
INSERT INTO public."Cart" (product_id, qty)
VALUES	(1, 1);

--test/show product in Cart

SELECT * FROM public."Cart"

--add a coke (if product exist, update quantity by 1; otherwise insert with quantity 1)

DO $$
BEGIN
      IF EXISTS (SELECT * FROM public."Cart" WHERE product_id = 1) 
	  THEN
        UPDATE public."Cart" SET qty = qty + 1 WHERE product_id = 1;
    ELSE
        INSERT INTO public."Cart" (product_id, qty) VALUES (1, 1);
END IF;
END $$;
	
--add a chocolate to the Cart
INSERT INTO public."Cart" (product_id, qty)
VALUES	(2, 1);
	
--update Cart with a chocolate

DO $$
BEGIN
      IF EXISTS (SELECT * FROM public."Cart" WHERE product_id = 2) 
	  THEN
        UPDATE public."Cart" SET qty = qty + 1 WHERE product_id = 2;
    ELSE
        INSERT INTO public."Cart" (product_id, qty) VALUES (2, 1);
END IF;
END $$;

--Remove an item from the Cart
--If the quantity is more than 1, subtract 1 from it
--Remove a coke

UPDATE public."Cart" SET qty = qty - 1 
WHERE product_id = 1 
AND qty > 1;

--Test 

SELECT * FROM public."Cart"

--Remove the item from cart even if qty is more than 1

DELETE FROM public."Cart"
WHERE product_id = 1

--Test

SELECT * FROM public."Cart"

--Checkout to place the order

INSERT INTO public."OrderHeader" (order_id, user_id, order_date)
VALUES	(100, 21, CURRENT_TIMESTAMP);	-- user_id 21 (Arnold)
		(200, 25, CURRENT_TIMESTAMP);	-- user_id 25 (Sheryl)
		
SELECT * FROM public."OrderHeader"


-- use the above order ID to insert the cart contents into the order details table and delete the cart contents

INSERT INTO public."OrderDetails" (orderheader, product_id, qty)
SELECT	200 AS orderheader,
		c.product_id,
		c.qty
FROM public."Cart" c;

DELETE FROM public."Cart";

SELECT * FROM public."OrderDetails"

-- Printing OrderHeader table for single and multiple orders 
-- Single order

SELECT	order_id,
		user_id,
		order_date
FROM public."OrderHeader"
WHERE order_id = 100;

-- All orders

SELECT	order_id,
		user_id,
		order_date
FROM public."OrderHeader"
WHERE DATE(order_date) > '2023-12-01';

-- Inner join

SELECT	h.order_id,
		h.user_id,
		h.order_date,
		d.product_id,
		d.qty
FROM public."OrderHeader" h
JOIN	public."OrderDetails" d ON h.order_id = d.orderheader;
























	